from os import listdir


# Variables for exec
libname = "speedtest"
db = "/pasteur/appa/scratch/rchikhi/colabfold_db/"

# --- Soft versions ---
python = "Python/3.8.3"

# rule all:
#     input:
#         f"data/{libname}.ready"
#     params:
#         job_name="output_Serratus",
#         mem = "20G",
# 	    qos = "fast",
#         partition = "common,dedicated"
#     threads: 1


rule all:
    input:
        dynamic(f"data/{libname}_split/res_{{sample}}/sent.lock")
    priority: 11
    params:
        job_name="global",
        mem = "20G",
        partition = "human_hidden",
        qos = "fast"
    threads: 1


# rule preprocess_sort_split_msa:
#     input:
#         "data/{libname}.fa"
#     output:
#         dynamic("data/{libname}_split/{sample}.fa")
#     priority: 2
#     params:
#         job_name="faSplit_Serratus",
#         mem = "20G",
#         qos = "fast",
#         partition = "human_hidden"
#     threads: 1
#     run:
#         shell(f"module load {python} && sh scripts/preprocess.sh {{input}} data/{{wildcards.libname}}_split/")


rule base:
    output:
        dynamic(f"data/{libname}_split/{{sample}}.fa")    

rule msa:
    input:
        fa = "data/{libname}_split/{sample}.fa"
    output:
        splited_a3m = "data/{libname}_split/res_{sample}/aligned.lock"
    priority: 1
    params:
        job_name="speedtest",
        mem = "250G",
        qos = "fast",
        partition = "human_hidden"
    threads: 64
    run:
        # Align
        shell("rm -f speed_{threads}.txt && touch speed_{threads}.txt")
        shell(f"module load {python} && time (colabfold_search {{input.fa}} {db} data/{{wildcards.libname}}_split/res_{{wildcards.sample}}/ --db-load-mode 2 --threads {{threads}}) 2>> speed_{{threads}}.txt && touch {{output.splited_a3m}}")


rule compress_msa_sample:
    input:
        "data/{libname}_split/res_{sample}/aligned.lock"
    output:
        "data/{libname}_split/res_{sample}/sent.lock"
    priority: 10
    params:
        job_name = "compress_a3m",
        mem = "20G",
        qos = "fast",
        partition = "human_hidden"
    threads: 1
    priority: 10
    run:
        shell("touch {output}")
        # shell("cd data/{wildcards.libname}_split/ && tar -ckzf {wildcards.sample}.tar.gz res_{sample} && ssh ydufresn@192.168.148.50 -t \"rsync {wildcards.sample}.tar.gz $JZ:/gpfswork/rech/yph/uep61bl/scp_data/{wildcards.libname}/\" && cd - && touch {output}")
